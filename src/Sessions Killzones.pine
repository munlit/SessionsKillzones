/// ╔═══════════════════════════════╗
/// ║ 	Sessions & Killzones		║
/// ║ 	@	Ultr.					║
/// ║ 	@	TFlab					║
/// ╚═══════════════════════════════╝

//@version=5
indicator("Sessions & Killzones [@Ultr]", "Sess - Kill", overlay = true, max_bars_back = 5000)

//// ───────────────────────
/// ─── Killzone ───
/// ─── Colors ─────
//// ───────────────────────

/// ─── Standard ──
	// color.aqua								= #00BCD4
	// color.blue								= #2196F3
	// color.teal								= #00897B
	// color.green								= #4CAF50
	// color.olive								= #808000
	// color.lime								= #00E676
	// color.yellow								= #FFEB3B
	// color.orange								= #FF9800
	// color.maroon								= #880E4F
	// color.red								= #FF5252
	// color.fuchsia							= #E040FB
	// color.purple								= #9C27B0
	// color.navy								= #311B92
	// color.black								= #363A45
	// color.gray								= #787B86
	// color.silver								= #B2B5BE
	// color.white								= #FFFFFF

/// ─── Ameritrade ───
	// AmeTrWhite								= #FFFFFF								// AmeritradeWhite
	// AmeTrGrayPlatinum						= #F7F7F7								// AmeritradeGrayPlatinum
	// AmeTrGrayNickel							= #F1F1F1								// AmeritradeGrayNickel
	// AmeTrGrayNickelDark20					= #C0C0C0								// AmeritradeGrayNickelDark20
AmeTrGrayAluminum						= #E6E7E9								// AmeritradeGrayAluminum
	// AmeTrGrayAsh								= #D8D8D8								// AmeritradeGrayAsh
	// AmeTrGrayStone							= #999999								// AmeritradeGrayStone
	// AmeTrGrayIron							= #666666								// AmeritradeGrayIron
	// AmeTrGrayCharcoal						= #333333								// AmeritradeGrayCharcoal
	// AmeTrBlack								= #000000								// AmeritradeBlack
	// AmeTrGreenCabbage						= #EBF6E9								// AmeritradeGreenCabbage
	// AmeTrGreenVerdeLight70					= #B4D6B2								// AmeritradeGreenVerdeLight70
	// AmeTrGreenVerdeLight50					= #83BC7F								// AmeritradeGreenVerdeLight50
	// AmeTrGreenVerdeNat						= #40a829								// AmeritradeGreenVerdeNat
	// AmeTrGreenVerdeLight20					= #399333								// AmeritradeGreenVerdeLight20
	// AmeTrGreenVerde							= #087900								// AmeritradeGreenVerde
	// AmeTrGreenVerdeDark20					= #066000								// AmeritradeGreenVerdeDark20
	// AmeTrGreenMoss							= #BEE7D3								// AmeritradeGreenMoss
	// AmeTrGreenMint							= #6DC4BC								// AmeritradeGreenMint
	// AmeTrGreenPine							= #38635A								// AmeritradeGreenPine
	// AmeTrRedRose								= #FAD1CF								// AmeritradeRedRose
	// AmeTrRedRojaLight50						= #E08988								// AmeritradeRedRojaLight50
	// AmeTrRedRojaLight20						= #CD4241								// AmeritradeRedRojaLight20
	// AmeTrRedRoja								= #C11312								// AmeritradeRedRoja
	// AmeTrRedRojaDark20						= #940F0E								// AmeritradeRedRojaDark20
	// AmeTrorangePeach							= #FCE7CA								// AmeritradeorangePeach
	// AmeTrorangeCarrot						= #ED8902								// AmeritradeorangeCarrot
	// AmeTrorangeYam							= #BD5310								// AmeritradeorangeYam
	// AmeTrblueFrost							= #E1EEF9								// AmeritradeblueFrost
	// AmeTrblueLagoon							= #316486								// AmeritradeblueLagoon
	// AmeTrblueNavy							= #2A5673								// AmeritradeblueNavy
	// AmeTrblueNcean							= #64A1C6								// AmeritradeblueNcean
	// AmeTrpurpleEggPlant						= #732181								// AmeritradepurpleEggPlant

/// ─── Axi ───
	// AxiPrimary								= #fc404d								// AxiPrimary
	// AxiSecondary								= #282424								// AxiSecondary
	// AxiAccent								= #61ce70								// AxiAccent
	// Axi7a46f22								= #d11c36								// Axi7a46f22
	// Axi1519066c								= #fc404d								// Axi1519066c
	// Axi3d4fa1a1								= #f0ebe3								// Axi3d4fa1a1
	// Axi638b46c1								= #fcd758								// Axi638b46c1
	// Axid07bac9								= #f9b4a8								// Axid07bac9
	// Axie63a114								= #2c4d5a								// Axie63a114
	// Axi8bf0845								= #a4d866								// Axi8bf0845
	// Axi75c6da1								= #282424								// Axi75c6da1
	// Axi378280f								= #45c2c7								// Axi378280f
	// Axi4de92c5								= #6caddf								// Axi4de92c5
Axi413dab8			   					= #00275D					            // Axi413dab8
	// Axib3fab89								= #55165c								// Axib3fab89
	// Axi548138f								= #45c2c7								// Axi548138f
	// Axi5ed9920								= #ea1616								// Axi5ed9920
	// Axi70f7335								= #dd0606								// Axi70f7335

/// ─── GrayScale ───
	// GraySFocus								= #2d7aed								// GrayScaleFocus
	// GraySWhite								= #fff									// GrayScaleWhite
	// GraySBlack								= #000									// GrayScaleBlack
	// GraySPrimaryBlackberry					= #2e234b								// GrayScalePrimaryBlackberry
	// GraySPrimaryBlackberry40					= rgba(46, 35, 75, .4))			    	// GrayScalePrimaryBlackberry40
	// GraySPrimaryBlackberry65					= rgba(46, 35, 75, .65))				// GrayScalePrimaryBlackberry65
	// GraySPrimaryCoral						= #ffb198								// GrayScalePrimaryCoral
	// GraySSecondaryForestGreen				= #244024								// GrayScaleSecondaryForestGreen
	// GraySSecondaryKeyLime					= #b5ce6f								// GrayScaleSecondaryKeyLime
	// GraySSecondaryLavender					= #c5bfe4								// GrayScaleSecondaryLavender
	// GraySSecondaryLavender40					= rgba(197, 191, 228, .4))				// GrayScaleSecondaryLavender40
	// GraySsecondaryLavender60					= rgba(197, 191, 228, .6))				// GrayScalesecondaryLavender60
	// GrayShoverWhite							= #c0bdc9								// GrayScalehoverWhite
	// GrayShoverBlackberry						= #42326b								// GrayScalehoverBlackberry
	// GraySdisabledBlackberry					= #4d4466								// GrayScaledisabledBlackberry
	// GraySactiveBlackberry					= #4d4466								// GrayScaleactiveBlackberry
	// GrayShoverCcoral							= #ffcdbd								// GrayScalehoverCcoral
	// GraySactiveCcoral						= #ff9e80								// GrayScaleactiveCcoral
	// GrayShoverGray							= #827b93								// GrayScalehoverGray
	// GrayShoverGray2							= #6d6581								// GrayScalehoverGray2
	// GraySgrayCharcoal						= #282525								// GrayScalegrayCharcoal
	// GraySgrayCharcoal70						= rgba(40, 37, 37, .7))			    	// GrayScalegrayCharcoal70
	// GraySgrayCharcoal80						= rgba(40, 37, 37, .8))			    	// GrayScalegrayCharcoal80
	// GraySgrayLight							= #f5f5f5								// GrayScalegrayLight
	// GraySgrayMedium							= #eee									// GrayScalegrayMedium
	// GraySgray70								= #696666								// GrayScalegray70
	// GraySgrayDark							= #c1c1c1								// GrayScalegrayDark
	// GraySwebSeasalt		    				= #FAFAFC								// GrayScalewebSeasalt
GraySwebDivider							= #e9e7f1								// GrayScalewebDivider
GraySwebBackground						= #f3f2fa								// GrayScalewebBackground
	// GraySwebSecondaryText					= #77708a								// GrayScalewebSecondaryText
	// GraySwebStroke							= #d3ceeb								// GrayScalewebStroke
	// GraySwebErrors							= #e00000								// GrayScalewebErrors
	// GraySwebService							= #2d7aed								// GrayScalewebService

/// ─── Interactive ───
	// IntAcPrimary3							= hsla(355, 85%, 46%, 0.03)		    	// InteractivePrimary3
	// IntAcPrimary5							= hsla(355, 85%, 46%, 0.05)		    	// InteractivePrimary5
	// IntAcPrimary10							= hsla(355, 85%, 46%, 0.10)		    	// InteractivePrimary10
	// IntAcPrimary20							= hsla(355, 85%, 46%, 0.20)		    	// InteractivePrimary20
	// IntAcPrimary30							= hsla(355, 85%, 46%, 0.30)		    	// InteractivePrimary30
	// IntAcPrimary40							= hsla(355, 85%, 46%, 0.40)		    	// InteractivePrimary40
	// IntAcPrimary50							= hsla(355, 85%, 46%, 0.50)		    	// InteractivePrimary50
	// IntAcPrimary60							= hsla(355, 85%, 46%, 0.60)		    	// InteractivePrimary60
	// IntAcPrimary70							= hsla(355, 85%, 46%, 0.70)		    	// InteractivePrimary70
	// IntAcPrimary80							= hsla(355, 85%, 46%, 0.80)		    	// InteractivePrimary80
	// IntAcPrimary90							= hsla(355, 85%, 46%, 0.90)		    	// InteractivePrimary90
	// IntAcPrimary								= hsla(355, 85%, 46%, 1.0)				// InteractivePrimary
	// IntAcPrimaryDark10						= hsla(355, 85%, 41%, 1.0)				// InteractivePrimaryDark10
	// IntAcPrimaryDark20						= hsla(355, 85%, 36%, 1.0)				// InteractivePrimaryDark20
	// IntAcPrimaryDark30						= hsla(355, 85%, 31%, 1.0)				// InteractivePrimaryDark30
	// IntAcPrimaryDark40						= hsla(355, 85%, 26%, 1.0)				// InteractivePrimaryDark40
	// IntAcPrimaryDark50						= hsla(355, 85%, 21%, 1.0)				// InteractivePrimaryDark50
	// IntAcSecondary3							= hsla(0, 0%, 13%, 0.03)				// InteractiveSecondary3
	// IntAcSecondary5							= hsla(0, 0%, 13%, 0.05)				// InteractiveSecondary5
	// IntAcSecondary10							= hsla(0, 0%, 13%, 0.10)				// InteractiveSecondary10
	// IntAcSecondary20							= hsla(0, 0%, 13%, 0.20)				// InteractiveSecondary20
	// IntAcSecondary30							= hsla(0, 0%, 13%, 0.30)				// InteractiveSecondary30
	// IntAcSecondary40							= hsla(0, 0%, 13%, 0.40)				// InteractiveSecondary40
	// IntAcSecondary50							= hsla(0, 0%, 13%, 0.50)				// InteractiveSecondary50
	// IntAcSecondary60							= hsla(0, 0%, 13%, 0.60)				// InteractiveSecondary60
	// IntAcSecondary70							= hsla(0, 0%, 13%, 0.70)				// InteractiveSecondary70
	// IntAcSecondary80							= hsla(0, 0%, 13%, 0.80)				// InteractiveSecondary80
	// IntAcSecondary90							= hsla(0, 0%, 13%, 0.90)				// InteractiveSecondary90
	// IntAcSecondary							= hsla(0, 0%, 13%, 1.0)			    	// InteractiveSecondary
	// IntAcSecondaryDark10						= hsla(0, 0%, 10%, 1.0)			    	// InteractiveSecondaryDark10
	// IntAcSecondaryDark20						= hsla(0, 0%, 7%, 1.0)					// InteractiveSecondaryDark20
	// IntAcSecondaryDark30						= hsla(0, 0%, 4%, 1.0)					// InteractiveSecondaryDark30
	// IntAcSecondaryDark40						= hsla(0, 0%, 1%, 1.0)					// InteractiveSecondaryDark40
	// IntAcSecondaryDark50						= hsla(0, 0%, 0%, 1.0)					// InteractiveSecondaryDark50
	// IntAcTertiary3							= hsla(202, 76%, 19%, 0.03)		    	// InteractiveTertiary3
	// IntAcTertiary5							= hsla(202, 76%, 19%, 0.05)		    	// InteractiveTertiary5
	// IntAcTertiary10							= hsla(202, 76%, 19%, 0.10)		    	// InteractiveTertiary10
	// IntAcTertiary20							= hsla(202, 76%, 19%, 0.20)		    	// InteractiveTertiary20
	// IntAcTertiary30							= hsla(202, 76%, 19%, 0.30)		    	// InteractiveTertiary30
	// IntAcTertiary40							= hsla(202, 76%, 19%, 0.40)		    	// InteractiveTertiary40
	// IntAcTertiary50							= hsla(202, 76%, 19%, 0.50)		    	// InteractiveTertiary50
	// IntAcTertiary60							= hsla(202, 76%, 19%, 0.60)		    	// InteractiveTertiary60
	// IntAcTertiary70							= hsla(202, 76%, 19%, 0.70)		    	// InteractiveTertiary70
	// IntAcTertiary80							= hsla(202, 76%, 19%, 0.80)		    	// InteractiveTertiary80
	// IntAcTertiary90							= hsla(202, 76%, 19%, 0.90)		    	// InteractiveTertiary90
	// IntAcTertiary							= hsla(202, 76%, 19%, 1.0)				// InteractiveTertiary
	// IntAcTertiaryDark10						= hsla(202, 76%, 14%, 1.0)				// InteractiveTertiaryDark10
	// IntAcTertiaryDark20						= hsla(202, 76%, 9%, 1.0)				// InteractiveTertiaryDark20
	// IntAcTertiaryDark30						= hsla(202, 76%, 4%, 1.0)				// InteractiveTertiaryDark30
	// IntAcTertiaryDark40						= hsla(202, 76%, 0%, 1.0)				// InteractiveTertiaryDark40

/// ─── Visa ───
	// VisPrimary								= #1434CB								// VisaBrandPrimary
	// VisPrimaryLight							= #3B57DE								// VisaBrandPrimaryLight
	// VisPrimaryDark							= #021E4C								// VisaBrandPrimaryDark
	// VisSecondary								= #FCC015								// VisaBrandSecondary
	// VisSecondaryLight						= #FFD700								// VisaBrandSecondaryLight
	// VisSecondaryDark							= #F7B600								// VisaBrandSecondaryDark
	// VisTertiary7								= #2C2C2C								// VisaBrandTertiary7
	// VisTertiary6								= #5C5C5C								// VisaBrandTertiary6
	// VisTertiary5								= #979797								// VisaBrandTertiary5
	// VisTertiary4								= #B9B9B9								// VisaBrandTertiary4
	// VisTertiary3								= #DEDEDE								// VisaBrandTertiary3
	// VisTertiary2								= #EEEEEE								// VisaBrandTertiary2
	// VisTertiary1								= #F7F7F7								// VisaBrandTertiary1

/// ─── Latam ───
	// LatRedBackground							= rgb(232, 17, 75)						// Latam Red Background

/// ─── Arbe Robotics ───
ARoPrimary								= #0035FF								// ArbePrimary
	// ARoPrimaryLight							= #0640FF								// ArbePrimaryLight
	// ARoSecondary		 	  					= #04EBFF								// ArbeSecondary

/// ─── AutoX ───
	// AxPrimary								= #2253F0								// AutoXPrimary
	// AxPrimaryLight							= #0050F9								// AutoXPrimaryLight
	// AxSecondary								= #75ebc0								// AutoXSecondary

/// ─── EEG ───
	// EEGSkyBlue30								= #01EBF9								// EEGSkyBlue30
	// EEGSkyBlue40								= #00E7FD								// EEGSkyBlue40
	// EEGFucsia40								= #FF00B1								// EEGFucsia40
	// EEGFucsia50								= #FE0CB6								// EEGFucsia50

/// ─── Bright Line ───
BrLiYel10								= #FBFD73								// BrightLineBackground Yellow Light
	// BrLiYel20								= #FFFD52								// BrightLine Yellow Light
	// BrLiYel30								= #FDF43C								// BrightLineB Yellow High
	// BrLiYel40								= #FEF301								// BrightLineBackground Yellow Nit
	// BrLiYel50								= #FFDB00								// BrightLineBackground Yellow Base

/// ─── TradingView ───
	// TVLightMenta50							= #00ffd5								// TradingViewMenta
	// TVLightGreen50					    	= #33ffac								// TradingViewGreenNit
	// TVBlue50									= #0034c5								// TradingViewBlue
	// TVLightYellow50							= #eedd45								// TradingViewYellow
	// TVNitRed40						   		= #e91e63								// TradingViewRedLight
	// TVLightBlueSky50							= #12cef8								// TradingViewBlueSky

/// ─── TFlab ───
	// TFlAsia			    					= #8bbcfc								// Lite TFlabAsia                        
	// TFlSydney		    					= #F0B884								// Lite TFlabSydney                      
	// TFlTokyo									= #0CC1C0								// Lite TFlabTokyo                       
	// TFlShanghai								= #ea1616								// Lite TFlabShanghai                    
	// TFlEuro									= #BBE8B5								// Lite TFlabEuro                        
	// TFlLondon								= #ACBBE8								// Lite TFlabLondon                      
	// TFlNewyork								= #C5ACE8								// Lite TFlabNewyork                     
	// TFlNYSE									= #87c2d4								// Lite TFlabNYSE                        

/// ─── Ultr ───
	// UltrBlueSky10							= #59F2E9								// UltrBlueSky10
	// UltrBlueSky20							= #39F0EA								// UltrBlueSky20
	// UltrMenta10								= #E0F9EF								// UltrMenta10
	// UltrMenta20								= #80F3EC								// UtlrMenta20
	// UltrMenta30								= #7FFFD4								// UltrMenta30
	// UltrMenta40								= #73FFCA								// UltrMenta40
	// UltrMenta50								= #9CFFD7								// UtlrMenta50
	// UltrMenta60								= #4fffc0								// UtlrMenta60
UltrRose20								= #FFA3E3								// UltrRose
	// UltrFucsia30								= #ff6fd3								// UltrFucsia
	// UltrLyla									= #7E57C2								// UltrLyla
	// UltrLightGray							= #787B86								// UltrLightGray
	// UltrRedNit								= #de0011								// UltrRedNit
	// UltrRed									= #db004b								// UltrRed
	// UltrBlue									= #003bde								// UltrBlue
	// UltrYellow								= #f4de1a								// UltrYellow
	// UltrSkyBlue								= #12cef8								// UltrSkyBlue
	// UltrOrange								= #ff5a00								// UltrOrange

/// ─── Allen ───
AllenSky10								= #CCF8FF								// AllenSky10
AllenSky20								= #80F3EC								// AllenSky20
	// AllenSky50								= #01ebf9								// AllenSky50

	// AllenMint10								= #E0F9EF								// AllenMint10
AllenMint20								= #9CFFD7								// AllenMint20
	// AllenMint30								= #7FFFD4								// AllenMint30
	// AllenMint40								= #73FFCA								// AllenMint40
	// AllenMint50								= #4fffc0								// AllenMint50
AllenMint60								= #33FFAC								// AllenMint60

	// AllenWine50								= #E91E63								// 	AllenWine50
	// AllenWine60								= #E8114B								// AllenWine60

//// ─────────────────────────────────────────────────────────────────────

//// ───────────────────────
/// ─── Killzone ───
/// ─── Variables ──
//// ───────────────────────

var grpTableInfo		= "─── Area de Info ───"
var grpSessTokyo		= " Tokyo"
var grpSessSydney		= " Sydney"
var grpSessLondon		= " London"
var grpSessNewYork		= " New York"
var grpSessNYSE			= " NYSE"

ShowTableInform			= input(defval = true,									title = "Mercados Abiertos",							group = grpTableInfo)

sesShowSydney			= input(defval = false,									title = "",				inline = "sessSyd",				group = grpSessSydney) 
sesShowTokyo			= input(defval = true,									title = "",				inline = "sessTko",				group = grpSessTokyo) 
sesShowLondon			= input(defval = true,									title = "",				inline = "sessLdn",				group = grpSessLondon) 
sesShowNewyork			= input(defval = true,									title = "",				inline = "sessNy",				group = grpSessNewYork) 
sesShowNYSE				= input(defval = false,									title = "",				inline = "sessNYS",				group = grpSessNYSE) 

/// ─── Time Sessions ──
sesTimeSydney			= input.session("1700-0200:23456",						title = "",				inline = "sessSyd",				group = grpSessSydney)
sesTimeTokyo			= input.session("1800-0300:23456",						title = "",				inline = "sessTko",				group = grpSessTokyo)
sesTimeLondon			= input.session("0200-1100:23456",						title = "",				inline = "sessLdn",				group = grpSessLondon)
sesTimeNewyork			= input.session("0700-1600:23456",						title = "",				inline = "sessNy",				group = grpSessNewYork)
sesTimeNYSE				= input.session("0830-1500:23456",						title = "",				inline = "sessNYS",				group = grpSessNYSE)

/// ─── KillZones segun Sesion
var grpKillZ			= "─── KillZones ───"
killShowAlva			= input(defval = false,									title = "",				inline = "seA",					group = grpKillZ,				tooltip = "Alva")
killShowPre				= input(defval = false,									title = "",				inline = "seP",					group = grpKillZ,				tooltip = "Pre Mercado")
killShowOpen			= input(defval = true,									title = "",				inline = "seO",					group = grpKillZ,				tooltip = "Apertura")
killShowRally			= input(defval = true,									title = "",				inline = "seR",					group = grpKillZ,				tooltip = "Corrección") 
killShowClose			= input(defval = true,									title = "",				inline = "seE",					group = grpKillZ,				tooltip = "Cierre") 

/// ─── KillZone
killTimeAlva			= input.session("0400-0530:123456",						title = "",				inline = "seA",					group = grpKillZ)
killTimePre				= input.session("0700-0745:123456",						title = "",				inline = "seP",					group = grpKillZ)
killTimeOpen			= input.session("0900-1045:123456",						title = "",				inline = "seO",					group = grpKillZ)
killTimeRally			= input.session("1130-1145:123456",						title = "",				inline = "seR",					group = grpKillZ)
killTimeClose			= input.session("1230-1345:123456",						title = "",				inline = "seE",					group = grpKillZ)

colorSessSydney			= input(color.new(AmeTrGrayAluminum,	40),			title = "",				inline = 'sessSyd',				group = grpSessSydney)
colorSessTokyo			= input(color.new(UltrRose20,			40),			title = "",				inline = 'sessTko',				group = grpSessTokyo)
colorSessLondon			= input(color.new(BrLiYel10,			40),			title = "",				inline = 'sessLdn',				group = grpSessLondon)
colorSessNewyork		= input(color.new(AllenMint20,			40),			title = "",				inline = 'sessNy',				group = grpSessNewYork)
colorSessNYSE			= input(color.new(AllenSky20,			40),			title = "",				inline = 'sessNYS',				group = grpSessNYSE)

colorTableOpen			= input.color(color.new(AllenMint60,		25),		title = "",				inline = "table",				group = grpTableInfo,			tooltip = "Open")
colorTableClose			= input.color(color.new(AllenSky10,			25),		title = "",				inline = "table",				group = grpTableInfo,			tooltip = "Close")
colorTableBackG			= input.color(color.new(ARoPrimary,			88),		title = "",				inline = "table",				group = grpTableInfo,			tooltip = "Fondo")
colorTableText			= input.color(color.new(GraySwebBackground,	30),		title = "",				inline = "table",				group = grpTableInfo,			tooltip = "Texto Open")
colorTableTextCl		= input.color(color.new(Axi413dab8,			10),		title = "",				inline = "table",				group = grpTableInfo,			tooltip = "Texto Close")
colorTableXtra			= input.color(color.new(AmeTrGrayAluminum,	75),		title = "",				inline = "table",				group = grpTableInfo,			tooltip = "Lineas")

colorTitleBack			= color.new(AmeTrGrayAluminum,	100)
colorTableBack			= color.new(Axi413dab8,			0)

/// ─── Titulo de Area
var grpSmc						= "─── Día ───"
string textSydney				= "Sydney"
string textTokyo				= "Tokyo"
string textShanghai				= "Shanghai"
string textLondon				= "Londres"
string textNewyork				= "New York"
string textNYSE					= "NYSE"

string textAsia					= "Asia"
string textAus					= "Australia"
string textAme					= "América"
string textEuro					= "Europe"
string textUs					= "Us"

string timeAme					= "UTC-5"								//	"America/New_York"
string timeAsia					= "UTC+9"								//	"Asia/Tokyo"
string timeEuro					= "UTC+1"								//	"Europe/London"
string timeAus					= "UTC+10"								//	"Australia/Sydney"
string timeUs					= "UTC-4"								//	"America/New_York"

string timeNYSE					= "UTC-5"								//	'UTC-5'		"America/Chicago"
string timeNewY					= "America/New_York"					//	'UTC.4'		"America/New_York"
string timeChig					= "America/Chicago"						//	'UTC-5'		"America/Chicago"
string timeArge					= "America/Argentina/Buenos_Aires"		//	'UTC-3'		"America/Argentina/Buenos_Aires"
string timeLond					= "Europe/London"						//	'UTC+1'		"Europe/London"
string timeShan					= "Asia/Shanghai"						//	'UTC+8'		"Asia/Shanghai"
string timeToky					= "Asia/Tokyo"							//	'UTC+9'		"Asia/Tokyo"
string timeSydn					= "Australia/Sydney" 					//	'UTC+10'	"Australia/Sydney"

//// ───────────────────────
/// ─── Killzone ───
/// ─── Options ────
//// ───────────────────────

optionLines					= input.string	(defval="···",					title="Linea",					options = ["───", "---", "···"])
optionTextSize				= input.string	(defval="Small",				title="Tamaño",					options = ["Tiny", "Small", "Auto", "Normal"])

optionSession				= input.string	(defval="Chicago",				title="Sesiones",				options = ["New York", "Chicago", "NYSE", "Londres", "Tokyo", "Sydney", "Argentina"])
optionKillZ					= input.string	(defval="Chicago",				title="KillZones",				options = ["New York", "Chicago", "NYSE", "Londres", "Tokyo", "Sydney", "Argentina"])

//// ───────────────────────
/// ─── Killzone ───
/// ─── Types ──────
//// ───────────────────────

type OHL
	float O = open
	float H = high
	float L = low
	float C = close
	float V = volume

//// ───────────────────────
/// ─── Killzone ───
/// ─── Switch ─────
//// ───────────────────────

string switchLines = switch optionLines
	"───"			=> line.style_solid				//  Solid
	"---"			=> line.style_dashed			//  Dashed
	"···"			=> line.style_dotted			//  Dotted

string switchText = switch optionTextSize
	"Auto"			=> size.auto
	"Tiny"			=> size.tiny
	"Small"			=> size.small
	"Normal"		=> size.normal

string switchSession = switch optionSession
	"NYSE"			=> timeNYSE
	"New York"		=> timeNewY
	"Chicago"		=> timeChig
	"Londres"		=> timeLond
	"Tokyo"			=> timeToky
	"Shanghai"		=> timeShan
	"Sydney"		=> timeSydn
	"Argentina"		=> timeArge

string switchKillZone = switch optionKillZ
	"NYSE"			=> timeNYSE
	"New York"		=> timeNewY				
	"Chicago"		=> timeChig	
	"Londres"		=> timeLond	
	"Tokyo"			=> timeToky
	"Shanghai"		=> timeShan
	"Sydney"		=> timeSydn
	"Argentina"		=> timeArge

//// ───────────────────────
/// ─── Killzone ───
/// ─── Instances ──
//// ───────────────────────

ohl = OHL.new()

//// ───────────────────────
/// ─── Killzone ───
/// ─── Maths ──────
//// ───────────────────────

/// ─── Sessions
On_sesTokyo				= math.sign(nz(time(timeframe.period,	sesTimeTokyo,		switchSession)))
On_sesLondon			= math.sign(nz(time(timeframe.period,	sesTimeLondon,		switchSession)))
On_sesNewyork			= math.sign(nz(time(timeframe.period,	sesTimeNewyork,		switchSession)))
On_sesNYSE				= math.sign(nz(time(timeframe.period,	sesTimeNYSE,		switchSession)))
On_sesSydney			= math.sign(nz(time(timeframe.period,	sesTimeSydney,		switchSession)))

/// ─── KillZones
onKillZoneAlva			= math.sign(nz(time(timeframe.period,	killTimeAlva,		switchKillZone)))
onKillZonePre			= math.sign(nz(time(timeframe.period,	killTimePre,		switchKillZone)))
onKillZoneOpen			= math.sign(nz(time(timeframe.period,	killTimeOpen,		switchKillZone)))
onKillZoneRally			= math.sign(nz(time(timeframe.period,	killTimeRally,		switchKillZone)))
onKillZoneClose			= math.sign(nz(time(timeframe.period,	killTimeClose,		switchKillZone)))

/// ─── High & Low Sessions
LowHighSessionDetector(On_Session, Color_Session, Text_Session) =>

	var int Bar			= 0
	var float High		= 0.0 
	var float Low		= 0.0
	var box BoX			= na
	var label LabeL		= na 

	if  (On_Session[1] == 0 and On_Session == 1)
		Bar				:= bar_index
		High			:= high
		Low				:= low

	else if (On_Session[1] == 1 and On_Session == 1)
		High			:= math.max(high , High) 
		Low				:= math.min(low , Low)

	else if On_Session == 0
		High			:= 0.0 
		Low				:= 0.0
		Bar				:= 0

	if On_Session > On_Session[1]
		BoX				:= box.new(bar_index, High, bar_index, Low, bgcolor = color.new(Color_Session, 97),
		  border_color	= color.new(Color_Session, 35),
		  border_width	= 2 , 
		  border_style	= switchLines)
		
		LabeL			:= label.new(Bar, High , text = Text_Session ,xloc = xloc.bar_index, yloc = yloc.price, size = switchText ,
		  style			= (Text_Session	== 'Sydney' or Text_Session == 'London' ) ? label.style_label_lower_right  : 
		  Text_Session	== 'Asia' ?  label.style_label_down :  label.style_label_lower_left,
		  textcolor		= Color_Session,				color = colorTitleBack)

	if On_Session and On_Session == On_Session[1]
		box.set_top(BoX, High)
		box.set_bottom(BoX, Low)
		box.set_right(BoX, bar_index)
		label.set_x(LabeL,math.round(math.avg(Bar,bar_index)))
		label.set_y(LabeL, High)

	[High , Low ]

if sesShowSydney 
	[HighS, LowS]		= LowHighSessionDetector(On_sesSydney,	colorSessSydney,	textSydney)
if sesShowTokyo 
	[HighT, LowT]		= LowHighSessionDetector(On_sesTokyo,	colorSessTokyo,		textTokyo)
if sesShowLondon 
	[HighL, LowL]		= LowHighSessionDetector(On_sesLondon,	colorSessLondon,	textLondon)
if sesShowNewyork 
	[HighN, LowN]		= LowHighSessionDetector(On_sesNewyork,	colorSessNewyork,	textNewyork)
if sesShowNYSE
	[HighNY, LowNY]		= LowHighSessionDetector(On_sesNYSE,	colorSessNYSE,		textNYSE)

/// ─── High & Low KillZones
LowHighKillZones(onKillZones, colorKillZones) =>

	var int Bar				= 0
	var float High			= 0.0 
	var float Low			= 0.0
	var box BoX				= na
	var label LabeL			= na 

	if  (onKillZones[1] == 0 and onKillZones == 1)
		Bar					:= bar_index
		High				:= high
		Low					:= low

	else if (onKillZones[1] == 1 and onKillZones == 1)
		High				:= math.max(high , High) 
		Low					:= math.min(low , Low)

	else if onKillZones == 0
		High				:= 0.0 
		Low					:= 0.0
		Bar					:= 0

	if onKillZones > onKillZones[1]
		BoX					:= box.new(bar_index, High, bar_index, Low, bgcolor = color.new(colorKillZones, 85),
			  border_color	= color.new(colorKillZones, 75),
			  border_width	= 1, 
			  border_style	= switchLines)

	if onKillZones and onKillZones == onKillZones[1]
		box.set_top(BoX, High)
		box.set_bottom(BoX, Low)
		box.set_right(BoX, bar_index)
		label.set_x(LabeL,math.round(math.avg(Bar,bar_index)))
		label.set_y(LabeL, High)

	[High , Low ]

if killShowAlva
	[HighS, LowS]		= LowHighKillZones(onKillZoneAlva,	colorSessSydney)
if killShowPre
	[HighT, LowT]		= LowHighKillZones(onKillZonePre,	colorSessTokyo)
if killShowOpen
	[HighL, LowL]		= LowHighKillZones(onKillZoneOpen,	colorSessLondon)
if killShowRally
	[HighN, LowN]		= LowHighKillZones(onKillZoneRally,	colorSessNewyork)
if killShowClose
	[HighNY, LowNY]		= LowHighKillZones(onKillZoneClose,	colorSessNYSE)

//// ───────────────────────
/// ─── Killzone ───
/// ─── Table ──────
//// ───────────────────────

var Info_Table = table.new(position.top_right, 4, 10, bgcolor = colorTableBackG, border_color = colorTableXtra, border_width = 1, 
	  frame_color = colorTableBack , frame_width = 1)

if ShowTableInform
	table.cell(Info_Table, 0, 0,	'Sesiones Abiertas',					text_color = colorTableText,			text_size = switchText)
	table.merge_cells(Info_Table, 0, 0, 3, 0)
	table.cell(Info_Table, 0, 1,	'Session',								text_color = colorTableText,			text_size = switchText)
	table.cell(Info_Table, 1, 1,	'Status',								text_color = colorTableText,			text_size = switchText)
	table.cell(Info_Table, 2, 1,	'Inicio',								text_color = colorTableText,			text_size = switchText)
	table.cell(Info_Table, 3, 1,	'Cierre',								text_color = colorTableText,			text_size = switchText)

	table.cell(Info_Table, 0, 2,	textSydney,								text_color = colorSessSydney,			text_size = switchText)
	table.cell(Info_Table, 0, 3,	textTokyo,								text_color = colorSessTokyo,			text_size = switchText)
	table.cell(Info_Table, 0, 4,	textLondon,								text_color = colorSessLondon,			text_size = switchText)
	table.cell(Info_Table, 0, 5,	textNewyork,							text_color = colorSessNewyork,			text_size = switchText)
	table.cell(Info_Table, 0, 6,	textNYSE,								text_color = colorSessNYSE,				text_size = switchText)

	/// ─── Table Display
	table.cell(Info_Table, 1, 2,	(On_sesSydney	? 'Open' : 'Closed'),	bgcolor = On_sesSydney	? colorTableOpen : colorTableClose,	text_color = (On_sesSydney	? colorTableText : colorTableTextCl),	text_size = switchText)
	table.cell(Info_Table, 1, 3,	(On_sesTokyo	? 'Open' : 'Closed'),	bgcolor = On_sesTokyo	? colorTableOpen : colorTableClose,	text_color = (On_sesTokyo	? colorTableText : colorTableTextCl),	text_size = switchText)
	table.cell(Info_Table, 1, 4,	(On_sesLondon	? 'Open' : 'Closed'),	bgcolor = On_sesLondon	? colorTableOpen : colorTableClose,	text_color = (On_sesLondon	? colorTableText : colorTableTextCl),	text_size = switchText)
	table.cell(Info_Table, 1, 5,	(On_sesNewyork	? 'Open' : 'Closed'),	bgcolor = On_sesNewyork	? colorTableOpen : colorTableClose,	text_color = (On_sesNewyork	? colorTableText : colorTableTextCl),	text_size = switchText)
	table.cell(Info_Table, 1, 6,	(On_sesNYSE		? 'Open' : 'Closed'),	bgcolor = On_sesNYSE	? colorTableOpen : colorTableClose,	text_color = (On_sesNYSE	? colorTableText : colorTableTextCl),	text_size = switchText)

	table.cell(Info_Table, 2, 2,	'17:00' ,								text_color = colorTableText,			text_size = switchText)
	table.cell(Info_Table, 2, 3,	'18:00' ,								text_color = colorTableText,			text_size = switchText)
	table.cell(Info_Table, 2, 4,	'02:00' ,								text_color = colorTableText,			text_size = switchText) 
	table.cell(Info_Table, 2, 5,	'07:00' ,								text_color = colorTableText,			text_size = switchText)  
	table.cell(Info_Table, 2, 6,	'08:30' ,								text_color = colorTableText,			text_size = switchText)

	table.cell(Info_Table, 3, 2,	'02:00' ,								text_color = colorTableText,			text_size = switchText)
	table.cell(Info_Table, 3, 3,	'03:00' ,								text_color = colorTableText,			text_size = switchText)
	table.cell(Info_Table, 3, 4,	'11:00' ,								text_color = colorTableText,			text_size = switchText) 
	table.cell(Info_Table, 3, 5,	'15:57' ,								text_color = colorTableText,			text_size = switchText)  
	table.cell(Info_Table, 3, 6,	'15:00' ,								text_color = colorTableText,			text_size = switchText)

/// ─── Show Open Time

onStartKillzonesSydney			= math.sign(nz(time(timeframe.period,		'0700-0701',		switchKillZone)))
onStartKillzonesTokyo			= math.sign(nz(time(timeframe.period,		'0800-0801',		switchKillZone)))
onStartKillzonesLondon			= math.sign(nz(time(timeframe.period,		'0800-0801',		switchKillZone)))
onStartKillzonesNewyork			= math.sign(nz(time(timeframe.period,		'0800-0801',		switchKillZone)))
onStartKillzonesChicago			= math.sign(nz(time(timeframe.period,		'0700-0701',		switchKillZone)))
onStartKillzonesNYSE			= math.sign(nz(time(timeframe.period,		'0830-0831',		switchKillZone)))

StartLine(Width) =>
	StartLine = line.new(bar_index, open - 1 , bar_index, open + 1 , xloc.bar_index, extend.both, #aeafb196 , line.style_dotted, Width)
	StartLine

if  onStartKillzonesSydney
	if  switchKillZone  == timeSydn
		if killShowPre
			StartLine(2) 

if  onStartKillzonesTokyo
	if  switchKillZone  == timeToky
		if killShowPre
			StartLine(2) 

if  onStartKillzonesLondon
	if  switchKillZone  == timeLond
		if killShowPre
			StartLine(2) 

if  onStartKillzonesNewyork
	if  switchKillZone  == timeNewY
		if killShowPre
			StartLine(2) 

if  onStartKillzonesChicago
	if  switchKillZone  == timeChig
		if killShowPre
			StartLine(2) 

if  onStartKillzonesNYSE
	if  switchKillZone  == timeNYSE
		if killShowPre
			StartLine(2)

//// ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
